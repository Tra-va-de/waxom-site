name: Build and Deploy to Build Branch

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to checkout (default: main)'
        required: false
        default: 'main'

jobs:
  copy-files:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: main
          token: ${{ secrets.WAXOM_SITE_WORKFLOW }}

      - name: Copy files from main to temporary directory
        run: |
          mkdir -p /tmp/main_files
          cp index.html /tmp/main_files
          cp -r src /tmp/main_files

      - name: Switch to build branch and clean
        run: |
          git checkout build || git checkout -b build
          find . -not -path './.git*' -not -name '.' -delete
          rm -rf .github

      - name: Copy files from temporary directory
        run: |
          cp /tmp/main_files/index.html .
          cp -r /tmp/main_files/src/img .
          cp -r /tmp/main_files/src/fonts .
          cp -r /tmp/main_files/src/video .
          cp -r /tmp/main_files/src/js .
          cp /tmp/main_files/src/css/style.min.css style.css || cp /tmp/main_files/src/css/style.css style.css

      - name: Clean up temporary directory
        run: rm -rf /tmp/main_files

      - name: Debug index.html before upload
        run: |
          echo "index.html before upload in copy-files:"
          cat index.html

      - name: Upload copied files as artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: |
            index.html
            img/
            fonts/
            video/
            js/
            style.css

  update-paths:
    runs-on: ubuntu-latest
    needs: copy-files
    steps:
      - name: Download copied files
        uses: actions/download-artifact@v4
        with:
          name: build-files
          path: .

      - name: Debug index.html before update
        run: |
          echo "index.html before update in update-paths:"
          cat index.html

      - name: Update HTML and CSS paths
        run: |
          # Обновляем тег <link> с более гибким регулярным выражением
          sed -i 's|<link[^>]*rel=["'\'']stylesheet["'\''][^>]*href=["'\'']\.\?\/*src\/css\/style\(.\min\)\?.css["'\'']|<link rel="stylesheet" href="style.css"|' index.html
          sed -i 's|<link[^>]*rel=["'\'']stylesheet["'\''][^>]*href=["'\'']\.\?\/*css\/style\(.\min\)\?.css["'\'']|<link rel="stylesheet" href="style.css"|' index.html
          # Удаляем префикс src/ из всех путей
          sed -i 's|\.\?\/*src\/||g' index.html
          # Отладка после обновления HTML
          echo "index.html after update in update-paths:"
          cat index.html
          # Обновляем пути в CSS
          echo "Before updating CSS paths:"
          cat style.css
          sed -i 's/@import'\''\.\.\/\([^'\'']*\)'\''/@import '\''\1'\''/g' style.css
          echo "After updating @import paths:"
          cat style.css
          sed -i 's/url("\.\.\/\([^"]*\)"/url("\1"/g' style.css
          echo "After updating url() paths:"
          cat style.css

      - name: Upload updated files as artifact
        uses: actions/upload-artifact@v4
        with:
          name: updated-files
          path: |
            index.html
            style.css

  minify-html:
    runs-on: ubuntu-latest
    needs: update-paths
    steps:
      - name: Download copied files
        uses: actions/download-artifact@v4
        with:
          name: build-files
          path: .

      - name: Download updated files
        uses: actions/download-artifact@v4
        with:
          name: updated-files
          path: .

      - name: Debug index.html before minification
        run: |
          echo "index.html before minification in minify-html:"
          cat index.html

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 16

      - name: Install html-minifier
        run: npm install html-minifier -g

      - name: Minify HTML
        run: html-minifier --collapse-whitespace --remove-comments index.html -o index.html

      - name: Debug index.html after minification
        run: |
          echo "index.html after minification in minify-html:"
          cat index.html

      - name: Upload minified HTML as artifact
        uses: actions/upload-artifact@v4
        with:
          name: minified-html
          path: index.html

  minify-js:
    runs-on: ubuntu-latest
    needs: minify-html
    steps:
      - name: Checkout build branch
        uses: actions/checkout@v4
        with:
          ref: build
          token: ${{ secrets.WAXOM_SITE_WORKFLOW }}

      - name: Download copied files
        uses: actions/download-artifact@v4
        with:
          name: build-files
          path: .

      - name: Download updated files
        uses: actions/download-artifact@v4
        with:
          name: updated-files
          path: .

      - name: Download minified HTML
        uses: actions/download-artifact@v4
        with:
          name: minified-html
          path: .

      - name: Debug final index.html before commit
        run: |
          echo "Final index.html before commit in minify-js:"
          cat index.html

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 16

      - name: Install uglify-js
        run: npm install uglify-js -g

      - name: Debug JS files before minification
        run: |
          echo "JS files found:"
          find js/ -type f -name "*.js"

      - name: Minify JS
        run: |
          find js/ -type f -name "*.js" -exec sh -c 'uglifyjs "{}" --mangle --compress > "{}.tmp" && mv "{}.tmp" "{}"' \;

      - name: Debug final style.css before commit
        run: |
          echo "Final style.css before commit:"
          cat style.css

      - name: Commit and push all changes
        run: |
          git config user.name "${{ secrets.USER_NAME }}"
          git config user.email "${{ secrets.USER_EMAIL }}"
          git add .
          git commit -m "Build and deploy to build branch: copy files, update paths, minify HTML and JS" || true
          git push origin build
